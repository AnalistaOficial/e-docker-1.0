services:
  # Servidor web (Nginx)
  webservice:
    image: nginx:latest
    container_name: container-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mynetwork

  # Ambiente de desenvolvimento PHP
  php:
    build:
      context: ./php # Excuta o Dockerfile no diretório /php para contruir esta imagem
    image: php:3.21  # Use uma imagem PHP-FPM estável e recente
    container_name: container-php
    volumes:
      - ./php/public:/var/www/html/public
    networks:
      - mynetwork

  # Banco de dados MySQL
  db_mysql:
    image: mysql:9.2.0  # Use uma versão estável do MySQL
    container_name: container-mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_web
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    networks:
      - mynetwork

  # Aplicação Python
  python-app:
    image: python:3.9-slim
    container_name: python-container
    volumes:
      - ./python/src:/app
    working_dir: /app
    networks:
      - mynetwork
    stdin_open: true
    tty: true
    command: bash -c "pip install mysql-connector-python && tail -f /dev/null"

networks:
  mynetwork:
    driver: bridge  # Cria uma rede Docker específica para este compose
    name: mynetwork
